{
  "swagger": "2.0",
  "info": {
      "description": "Make company global travel and accommodation easy and convenient for the strong workforce of savvy members of staff, by leveraging the modern web.",
      "version": "1.1.1",
      "title": " Barefoot Nomad",      
      "contact": {
          "email": "strikers@andela.com"
      },
      "license": {
          "name": "Built with ‚ù§üíöü§û by strikers",
          "url": "https://github.com/atlp-rwanda/strikers-bn-be"
      }
  },
  "host": "strikers-bnbe.herokuapp.com",
  "basePath": "/",
  "schemes": [
      "https"
  ],
  "securityDefinitions": {
    "Authorization": {
      "type": "apiKey",
      "name": "Authorization",
      "description": "Value: Bearer ",
      "in": "header",
      "scheme": "bearer"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
      "/api/v1/users/register": {
          "post": {
            "tags": [
              "Users"
            ],
            "description": "User Registration",
            "parameters": [
              {
                "name": "obj",
                "in": "body",
                "required": true,
                "schema": {
                  "$ref": "#/definitions/User"
                }
              }
            ],
            "responses": {
              "201": {
                "description": "User registered successfully"
              },
              "409": {
                "description": "User already Exist"
              },
              "422": {
                "description": "Unprocessable Entity"
              }
            }
          }
        },
        "/api/v1/users/login": {
          "post": {
            "tags": [
              "Users"
            ],
            "description": "User Login",
            "parameters": [
              {
                "name": "obj",
                "in": "body",
                "required": true,
                "schema": {
                  "$ref": "#/definitions/LoginModel"
                }
              }
            ],
            "responses": {
              "200":{
                "description":"Login successfully"
              }
            }
          }
      },
        "/api/v1/users": {
          "get": {
            "tags": [
              "Users"
            ],
              "summary": "Get users",
              "description": "Get users",
              "produces": [
                  "application/json"
              ],
              "parameters": [],
              "responses": {
                  "200": {
                      "description": "Users retrieved successfully"
                  },
                  "500": {
                      "description": "Server error"
                  }
              },
              "security": [
                {
                  "Authorization": []
                }
              ]
          }
      },
      "/api/v1/users/{uuid}": {
          "get": {
            "tags": [
              "Users"
            ],
              "summary": "Get user",
              "description": "Get user",
              "produces": [
                  "application/json"
              ],
              "parameters": [
                  {
                    "name":"id",
                    "in":"path",
                    "schema":{
                      "type":"string",
                      "format":"uuid"
                    },
                    "required":true
                  }
              ],
              "responses": {
                  "200": {
                      "description": "User retrieved successfully"
                  },
                  "500": {
                      "description": "Server error"
                  }
              },
              "security": [
                {
                  "Authorization": []
                }
              ]
          }
      },
      "/api/v1/users/{uuid}/logout": {
        "get": {
            "tags": [
              "Users"
            ],
              "summary": "User logout",
              "description": "User logout",
              "produces": [
                  "application/json"
              ],
              "parameters": [],
              "responses": {
                  "200": {
                      "description": "User logged out successfully"
                  },
                  "500": {
                      "description": "Server error"
                  }
              },
              "security": [
                {
                  "Authorization": []
                }
              ]
          }
      },
      "/api/v1/users/{uuid}/updateuser":{
        "put": {
            "tags": [
              "Users"
            ],
              "summary": "Update User",
              "description": "Update User",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "application/json"
              ],
              "parameters": [
                {
                  "name":"id",
                  "in":"path",
                  "schema":{
                    "type":"string",
                    "format":"uuid"
                  },
                  "required":true
                },
                {
                  "name": "obj",
                  "in": "body",
                  "required": true,
                  "schema": {
                    "$ref": "#/definitions/UpdateUserModel"
                  }
                }
              ],
              "responses": {
                  "200": {
                      "description": "User updated successfully"
                  },
                  "500": {
                      "description": "Server error"
                  }
              },
              "security": [
                {
                  "Authorization": []
                }
              ]
          }
      },
      "/api/v1/trips/all": {
          "get": {
            "tags": [
              "TripRequest"
            ],
            "description": "",
            "responses": {
              "200": {
                "description": "Query ok"
              },
              "500": {
                "description": "Internal Server Error"
              }
            },
            "security": [
              {
                "Authorization": []
              }
            ]
          }
        },
      "/api/v1/trips/create": {    
          "post": {
            "tags": [
              "TripRequest"
            ],
            "description": "",
            "consumes": [
              "application/json"
            ],
            "parameters": [
          
              {
                "name": "source",
                "in": "formData",
                "required": true,
                "type": "string"
              },
              {
                "name": "destination",
                "in": "formData",
                "required": true,
                "type": "string"
              },
              {
                "name": "DateOfTravel",
                "in": "formData",
                "required": true,
                "type":"string"
              },  
                {
                "name": "DateOfDestination",
                "in": "formData",
                "required": true,
                "type":"string"
              },
              {
                  "name": "status",
                  "in": "formData",
                  "required": true,
                  "type": "string"
                }
    
            ],      
            "responses": {
              "200": {
                "description": "Trip request created successivelly"
              },
              "404": {
                "description": "Not Found"
              },
              "422": {
                "description": "Unprocessable Entity"
              },
              "500": {
                "description": "Internal Server Error"
              }
            },
            "security": [
              {
                "Authorization": []
              }
            ]
          }
        },
        "/api/v1/trips/status/{id}": {
          "put": {
            "tags": [
              "TripRequest"
            ],
            "description": "",
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "required": true,
                "type": "string"
              },
              {
                "name": "status",
                "in": "body",
                "required": true,
                "schema": {
                  "$ref": "#/definitions/ChangeStatus"
                }
              }
            ],
            "responses": {
              "201": {
                "description": "Updated"
              },
              "404": {
                "description": "Not Found"
              },
              "400": {
                "description": "Bad Request"
              },
              "422": {
                "description": "Unprocessable Entity"
              },
              "500": {
                "description": "Internal Server Error"
              }
            },
            "security": [
              {
                "Authorization": []
              }
            ]
          }
        },
        "/api/v1/trips/all/{id}": {
          "get": {
            "tags": [
              "TripRequest for getting trips by their  userid"
            ],
            "description": "",
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "201": {
                "description": "Trips fetched successfully"
              },
              "500": {
                "description": "Internal Server Error"
              }
            }
          }
        },
        "/api/v1/trips/{id}": {
          "put": {
            "tags": [
              "TripRequest"
            ],
            "description": "",
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "required": true,
                "type": "string"
              },
              {
                "name": "obj",
                "in": "body",
                "required": true,
                "schema": {
                  "$ref": "#/definitions/TripRequest"
                }
              }
            ],
            "responses": {
              "201": {
                "description": "Updated"
              },
              "404": {
                "description": "Not Found"
              },
              "422": {
                "description": "Unprocessable Entity"
              },
              "500": {
                "description": "Internal Server Error"
              }
            },
            "security": [
              {
                "Authorization": []
              }
            ]
          },
          "get": {
            "tags": [
              "TripRequest"
            ],
            "description": "",
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "OK"
              },
              "404": {
                "description": "Not Found"
              },
              "500": {
                "description": "Internal Server Error"
              }
            },
            "security": [
              {
                "Authorization": []
              }
            ]
          },
          "delete": {
            "tags": [
              "TripRequest"
            ],
            "description": "",
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "204": {
                "description": "No Content"
              },
              "404": {
                "description": "Not Found"
              },
              "500": {
                "description": "Internal Server Error"
              }
            },
            "security": [
              {
                "Authorization": []
              }
            ]
          }
        },
        "/api/v1/trips/{tripId}/comments": {
          "post": {
            "tags": [
              "TripRequest"
            ],
            "description": "",
            "parameters": [
              {
                "name": "tripId",
                "in": "path",
                "required": true,
                "type": "string"
              },
              {
                "name": "obj",
                "in": "body",
                "required": true,
                "schema": {
                  "$ref":"#/definitions/TripRequestComment"
                }
              }
            ],
            "responses": {
              "201": {
                "description": "Comment added"
              },
              "400": {
                "description": "Bad Request"
              },
              "500": {
                "description": "Internal Server Error"
              }
            },
            "security": [
              {
                "Authorization": []
              }
            ]
          },
          "get":{
            "tags": [
              "TripRequest"
            ],
            "description": "",
            "parameters": [
              {
                "name": "tripId",
                "in": "path",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "201": {
                "description": "Comments fetched successfully"
              }
            },
            "security": [
              {
                "Authorization": []
              }
            ]
          }
        },      
        "/api/v1/trips/{tripId}/comments/{uuid}": {
          "delete": {
            "tags": [
              "TripRequest"
            ],
            "description": "",
            "parameters": [
              {
                "name": "tripId",
                "in": "path",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "Comment deleted successfully!"
              },
              "404": {
                "description": "Not found"
              },
              "500": {
                "description": "Internal Server Error"
              }
            },
            "security": [
              {
                "Authorization": []
              }
            ]
          }
        },      
        "/api/v1/accommodations/top": {
          "get": {
            "tags": ["Accomodation"],
            "description": "Get 5 Top Accomodations",
            "produces": ["application/json"],
            "parameters": [],
            "responses": {
              "200": {
                "description": "Success"
              },
              "400": {
                "description": "Invalid data"
              },
              "404": {
                "description": "Not found"
              },
              "500": {
                "description": "Internal server error"
              }
            },
            "security": [
              {
                "Authorization": []
              }
            ]
          }
        },
        "/api/v1/bookings": {
          "get": {
            "tags": [
              "Booking"
            ],
            "description": "Get all bookings",
            "responses": {
              "200": {
                "description": "Query ok"
              },
              "500": {
                "description": "Internal Server Error"
              }
            },
            "security": [
              {
                "Authorization": []
              }
            ]
          },
          "post": {
            "tags": [
              "Booking"
            ],
            "description": "Create a new room booking request",
            "consumes": [
              "application/json"
            ],
            "parameters": [
              {
                "name": "supplierId",
                "in": "formData",
                "required": true,
                "type": "string"
              },
              {
                "name": "accomodationId",
                "in": "formData",
                "required": true,
                "type": "string"
              },
              {
                "name": "roomId",
                "in": "formData",
                "required": true,
                "type": "date"
              },  
                {
                "name": "requesterId",
                "in": "formData",
                "required": true,
                "type": "date"
              },
              {
                "name": "startDate",
                "in": "formData",
                "required": true,
                "type": "date"
              },
              {
                "name": "endDate",
                "in": "formData",
                "required": true,
                "type": "date"
              }
    
            ],      
            "responses": {
              "200": {
                "description": "Trip request created successivelly"
              },
              "404": {
                "description": "Not Found"
              },
              "422": {
                "description": "Unprocessable Entity"
              },
              "500": {
                "description": "Internal Server Error"
              }
            },
            "security": [
              {
                "Authorization": []
              }
            ]
          }
        },
        "/api/v1/feedback": {
          "post": {
          "tags": ["Feedback"],
          "description": "Add feedback",
            "consumes": [
              "application/json"
            ],
            "parameters": [
              {
                "name": "accomodationId",
                "in": "path",
                "required": true,
                "type": "string"
              },  
              {
                "name": "Feedback",
                "in": "body",
                "required": true,
                "schema": {
                  "$ref": "#/definitions/Feedback"
                }
              }
            ],
            "security": [
              {
                "Authorization": []
              }
            ]  
        }
      },
      "/api/v1/chat": {
        "get":{
          "tags": [
            "Users's chat"
          ],
          "description": "Get all Rooms",
          "parameters": [],
          "responses": {
            "200": {
              "description": "Rooms fetched successfully"
            }
          },
          "security": [
            {
              "Authorization": []
            }
          ]  
        },
        "post": {
          "tags": [
            "Users's chat"
          ],
          "description": "Add new Room",
          "parameters": [
            {
              "name": "obj",
              "in": "body",
              "required": true,
              "schema": {
                "$ref":"#/definitions/NewChatRoom"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Room added successfully"
            },
            "400": {
              "description": "Bad Request"
            },
            "500": {
              "description": "Internal Server Error"
            }
          },
          "security": [
            {
              "Authorization": []
            }
          ]
        }
      },      
      "/api/v1/chat/{chatRoomId}/messages": {
        "post": {
          "tags": [
            "Users's chat"
          ],
          "description": "Add new messages",
          "parameters": [
            {
              "name":"chatRoomId",
              "in":"path",
              "required":"true"
            },
            {
              "name": "obj",
              "in": "body",
              "required": true,
              "schema": {
                "$ref":"#/definitions/NewChatMessage"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Message added successfully"
            },
            "400": {
              "description": "Bad Request"
            },
            "500": {
              "description": "Internal Server Error"
            }
          },
          "security": [
            {
              "Authorization": []
            }
          ]
        },
        "get":{
          "tags": [
            "Users's chat"
          ],
          "description": "Get all Messages",
          "parameters": [],
          "responses": {
            "200": {
              "description": "Messages fetched successfully"
            },
            "400": {
              "description": "Bad Request"
            },
            "500": {
              "description": "Internal Server Error"
            }
          },
          "security": [
            {
              "Authorization": []
            }
          ]  
        }          
      },
      "/api/v1/chat/{chatRoomId}/messages/new":{
        "get":{
          "tags": [
            "Users's chat"
          ],
          "description": "Get Latest Messages",
          "parameters": [],
          "responses": {
            "200": {
              "description": "Messages fetched successfully"
            },
            "400": {
              "description": "Bad Request"
            },
            "500": {
              "description": "Internal Server Error"
            }
          },
          "security": [
            {
              "Authorization": []
            }
          ]  
        } 
      },
      "/api/v1/notifications": {
        "get": {
          "tags": ["Notification"],
          "description": "get all notifications of a user",
            "consumes": [
              "multipart/form-data"
            ],
            "produces":[
              "application/json"
            ],
            "parameters": [
              {
                "in":"header",
                "name":"Authorization",
                "description":"JWT Token of the user",
                "type":"string",
                "required":"true"
            }
            ],
            "responses": {
              "200": {
                  "description": "Success"
              },
              "201": {
                  "description": "Created"
              },
              "400": {
                  "description": "Invalid data"
              },
              "500": {
                  "description": "Internal server error"
              }
          }  
        }
      },

      "/api/v1/notifications/new":{
        "post":{
          "tags":["Notification"],
          "description":"create a notification",
          "produces": [
            "application/json"
        ],
          "parameters": [
            {
              "name": "title",
              "in": "formData",
              "required": true,
              "type": "string"
            },
            {
              "name": "description",
              "in": "formData",
              "required": true,
              "type": "string"
            },
            {
              "name": "to",
              "in": "formData",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
                "description": "Success"
            },
            "400": {
                "description": "Invalid data"
            },
            "404": {
                "description": "Not found"
            },
            "500": {
                "description": "Internal server error"
            }
        } 
        }
      },

      "/api/v1/notifications/read/{notificationId}":{
        "post":{
          "tags":["Notification"],
          "description":"read a notification",
          "produces": [
            "application/json"
        ],
          "parameters":[
            {
              "name":"notificationId",
              "in": "path",
              "required": true,
              "type": "string"
             }
          ],
          "responses": {
            "200": {
                "description": "Success"
            },
            "400": {
                "description": "Invalid data"
            },
            "404": {
                "description": "Not found"
            },
            "500": {
                "description": "Internal server error"
            }
        }
        }
      },
      "/api/v1/notifications/readAll":{
        "post":{
          "tags":["Notification"],
          "description":"read all notifications",
          "produces": [
            "application/json"
        ],
          "parameters":[],
          "responses": {
            "200": {
                "description": "Success"
            },
            "400": {
                "description": "Invalid data"
            },
            "404": {
                "description": "Not found"
            },
            "500": {
                "description": "Internal server error"
            }
        }
        }
      },

      "/api/v1/notifications/{notificationId}":{
        "delete": {
          "tags": ["Notification"],
          "description": "delete notification by id",
          "produces": [
            "application/json"
        ],
            "parameters": [
             {
              "name":"notificationId",
              "in": "path",
              "required": true,
              "type": "string"
             }
            ]  ,
            "responses": {
              "200": {
                  "description": "Success"
              },
              "400": {
                  "description": "Invalid data"
              },
              "404": {
                  "description": "Not found"
              },
              "500": {
                  "description": "Internal server error"
              }
          }
        }
      }           
    },
  "definitions": {
      "User": {
          "type": "object",
          "properties": {
              "firstName": {
                  "type": "string",
                  "example": "John",
                  "required": true
              },
              "lastName": {
                  "type": "string",
                  "example": "Smith",
                  "required": true
              },
              "email": {
                  "type": "string",
                  "example": "John@andela.com",
                  "required": true
              },
              "password": {
                  "type": "string",
                  "example": "John12345",
                  "required": true
              },
              "roleId": {
                  "type": "string",
                  "example": "c1f1d2bf-33bd-4e11-9d7a-0331db465f95",
                  "required": true
              },
              "phoneNumber": {
                  "type": "string",
                  "example": "0790888888",
                  "required": true
              },
              "lineManager":{
                "type": "string",
                "example":"13c35001-a96d-4307-b86a-5f9aef66f771"
              }  
          }
      },
      "LoginModel": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "abi_seth@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "pass12345"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "UpdateUserModel": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "example": "John Snow"
          },
          "lastName": {
            "type": "string",
            "example": "John Snow"
          },        
          "roleId": {
            "type": "string",
            "example": "c1f1d2bf-33bd-4e11-9d7a-0331db465f95"
          },
          "phoneNumber": {
            "type": "string",
            "example": "0790558888"
          },      
          "lineManager": {
            "type": "string",
            "example": "13c35001-a96d-4307-b86a-5f9aef66f771"
          }                             
        }
      },
      "ChangeStatus":{
        "type":"object",
        "properties":{
          "status":{
            "type":"string",
            "example":"approved",
            "required":true
          }
        }
      },
      "Booking": {
        "type": "object",
        "properties": {
        "supplierId": {
          "type": "string",
          "required": true
        },
        "accomodationId": {
          "type": "string",
          "required": true
        },
        "roomId": {
          "type": "string",
          "required": true
        },
        "requesterId": {
          "type": "string",
          "required": true
        },
        "startDate": {
          "type": "date",
          "required": true
        },
        "endDate": {
          "type": "date",
          "required": true
        }
      }
    },
      "TripRequest": {
          "type": "object",
          "properties": {
              "source": {
                  "type": "string",
                  "required": true
              },
              "destination": {
                  "type": "string",
                  "required": true
              },
              "DateOfTravel": {
                  "type": "string",
                  "required": true
              },
              "DateOfDestination": {
                  "type": "string",
                  "required": true
              },
              "status": {
                  "type": "string",
                  "required": true
              }
          }
      },
      "TripRequestComment": {
          "type": "object",
          "properties": {                
              "comment": {
                  "type": "string",
                  "example":"comment1",
                  "required": true
              }
          }
      },
      "NewChatRoom": {
          "type": "object",
          "properties": {                
              "roomName": {
                  "type": "string",
                  "example":"room1",
                  "required": true
              }
          }
      },
      "NewChatMessage": {
          "type": "object",
          "properties": {                
              "message": {
                  "type": "string",
                  "example":"message1",
                  "required": true
              }
          }
      },
      "Feedback": {
          "type": "object",
          "properties": {
              "feedbackId": {
                  "type": "string",
                  "required": true
              },
              "userId": {
                  "type": "string",
                  "required": true
              },
              "feedback": {
                  "type": "string",
                  "required": true
              }
          }
      }
  }
 
}
